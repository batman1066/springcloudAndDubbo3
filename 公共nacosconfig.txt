1.dataId:dubbo.yaml

2.dataId:sentinel-dubbo.yaml
spring:
  cloud:
    compatibility-verifier:
      enabled: false
    sentinel:
      transport:
        dashboard: 192.168.1.122:8090
      eager: true
      # API分组&流控规则配置文件配置
      datasource:
        flow-rules:
          nacos:
            server-addr: ${nacos.config.server-addr:${spring.cloud.nacos.config.server-addr}}
            data-id: ${spring.application.name}-flow-rules
            namespace: dev-sentinel
            group-id: DEFAULT_GROUP
            username: ${nacos.config.username:${spring.cloud.nacos.config.username}}
            password: ${nacos.config.password:${spring.cloud.nacos.config.password}}
            data-type: json
            rule-type: flow
        degrade-rules:
          nacos:
            server-addr: ${nacos.config.server-addr:${spring.cloud.nacos.config.server-addr}}
            data-id: ${spring.application.name}-degrade-rules
            namespace: dev-sentinel
            group-id: DEFAULT_GROUP
            username: ${nacos.config.username:${spring.cloud.nacos.config.username}}
            password: ${nacos.config.password:${spring.cloud.nacos.config.password}}
            data-type: json
            rule-type: degrade
#配置sentinel写入nacos的连接信息
sentinel:
  write:
    nacos:
      serverAddr: ${nacos.config.server-addr:${spring.cloud.nacos.config.server-addr}}
      namespace: dev-sentinel
      groupId: DEFAULT_GROUP
      username: ${nacos.config.username:${spring.cloud.nacos.config.username}}
      password: ${nacos.config.password:${spring.cloud.nacos.config.password}}

3.dataId: sentinel-gateway.yaml
spring:
  cloud:
    sentinel:
      scg:
        # 降级处理配置 也可以在代码中实现
        fallback:
          # 指定降级处理的模式为返回响应，也可以配置成重定向redirect，配置重定向需要指定重定向地址
          mode: 'response'
          response-status: 200
          response-body: '{"code":500,"msg":"gateway配置文件配置-被限流了！"}'
          # mode 为 redirect 时使用
          redirect: 'https://www.baidu.com'
      transport:
        port: 8720
        dashboard: 192.168.1.122:8090
      eager: true
      # API分组&流控规则配置文件配置
      datasource:
        api-groups:
          nacos:
            server-addr: ${nacos.config.server-addr:${spring.cloud.nacos.config.server-addr}}
            data-id: ${spring.application.name}-gw-api-group-rules
            namespace: dev-sentinel
            group-id: DEFAULT_GROUP
            username: ${nacos.config.username:${spring.cloud.nacos.config.username}}
            password: ${nacos.config.password:${spring.cloud.nacos.config.password}}
            data-type: json
            rule-type: gw-api-group
        flow-rules:
          nacos:
            server-addr: ${nacos.config.server-addr:${spring.cloud.nacos.config.server-addr}}
            data-id: ${spring.application.name}-gw-flow-rules
            namespace: dev-sentinel
            group-id: DEFAULT_GROUP
            username: ${nacos.config.username:${spring.cloud.nacos.config.username}}
            password: ${nacos.config.password:${spring.cloud.nacos.config.password}}
            data-type: json
            rule-type: gw-flow
#配置sentinel写入nacos的连接信息
sentinel:
  write:
    nacos:
      serverAddr: ${nacos.config.server-addr:${spring.cloud.nacos.config.server-addr}}
      namespace: dev-sentinel
      groupId: DEFAULT_GROUP
      username: ${nacos.config.username:${spring.cloud.nacos.config.username}}
      password: ${nacos.config.password:${spring.cloud.nacos.config.password}}